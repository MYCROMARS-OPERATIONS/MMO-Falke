// Alexander Rudi | 2024
//---------------------------------------------
//*********************************************
// C Help Library
//#############################################


############################################################### Time.h

--------------------------------------------------------------- Variable type:

time_t
- long int

size_t
- This is the unsigned integral type and is the result of the sizeof keyword.

clock_t
- This is a type suitable for storing the processor time.

time_t is
- This is a type suitable for storing the calendar time.

struct tm
- This is a structure used to hold the time and date.

struct tm {
   int tm_sec;         /* seconds,  range 0 to 59 (0 â€“ 60, 60 = Leap second) */
   int tm_min;         /* minutes, range 0 to 59           */
   int tm_hour;        /* hours, range 0 to 23             */
   int tm_mday;        /* day of the month, range 1 to 31  */
   int tm_mon;         /* month, range 0 to 11             */
   int tm_year;        /* The number of years since 1900   */
   int tm_wday;        /* day of the week, range 0 to 6, 0 = Sunday */
   int tm_yday;        /* day in the year, range 0 to 365  */
   int tm_isdst;       /* daylight saving time, enabled (> 0), disabled (= 0), or unknown (< 0) */
};






--------------------------------------------------------------- Macros:

NULL
CLOCKS_PER_SEC
--------------------------------------------------------------- Function:

time(NULL)
difftime(a, b)

char *asctime(const struct tm *timeptr)
- Returns a pointer to a string which represents the day and time of the structure timeptr.

clock_t clock(void)
- Returns the processor clock time used since the beginning of an implementation defined era 
  (normally the beginning of the program).

char *ctime(const time_t *timer)
- Returns a string representing the localtime based on the argument timer.

double difftime(time_t time1, time_t time2)
- Returns the difference of seconds between time1 and time2 (time1-time2).

struct tm *gmtime(const time_t *timer)
- The value of timer is broken up into the structure tm and expressed in Coordinated Universal 
  Time (UTC) also known as Greenwich Mean Time (GMT).

struct tm *localtime(const time_t *timer)
- The value of timer is broken up into the structure tm and expressed in the local time zone.

time_t mktime(struct tm *timeptr)
- Converts the structure pointed to by timeptr into a time_t value according to the local time zone.

size_t strftime(char *str, size_t maxsize, const char *format, const struct tm *timeptr)
- Formats the time represented in the structure timeptr according to the formatting rules 
  defined in format and stored into str.

time_t time(time_t *timer)
- Calculates the current calender time and encodes it into time_t format.

size_t wcsftime( wchar_t* str, size_t count, const wchar_t* format, const struct tm* time )
- Converts a tm object to custom wide string textual representation.


--------------------------------------------------------------- Example, current time
#include <stdio.h>
#include <time.h>
 
int main(void)
{
  time_t timer = time(NULL);
  printf("current time is %s", ctime(&timer));
  return 0;
}

--------------------------------------------------------------- Example, Seconds, sleep, differenz
#include <stdio.h>
#include <time.h>
#include <synchapi.h>
#include "../header/time_a.h"

// Calculation
void time_a(void)
{
	// typedef long int
	// number of sec since Jan. 1, 1970 midnight
    	time_t now = time(NULL);

	printf("%s\n", "Seconds since Jan. 1, 1970 midnight:");
	printf("%ld\n\n", now);

	printf("%s\n", "Programm sleeps 2 seconds");

    // Programm sleeps 2 seconds, #include <synchapi.h>
	Sleep(2000);

	time_t two_secs = time(NULL);
	printf("%ld\n\n", two_secs);

	printf("%s\n", "Show differenz:");

	// Differenz
    double diff = difftime(two_secs, now);
	printf("%f\n\n", diff);
}

--------------------------------------------------------------- Time.h





--------------------------------------------------------------- Math.h






--------------------------------------------------------------- END
****************************************************************
